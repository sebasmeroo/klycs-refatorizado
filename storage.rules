rules_version = '2';

// ✅ REGLAS OPTIMIZADAS Y SEGURAS - Sin permisos globales
service firebase.storage {
  match /b/{bucket}/o {
    // === REGLAS PARA AVATARES DE USUARIOS ===
    match /users/{userId}/avatar/{fileName} {
      // Permitir lectura pública de avatares
      allow read: if true;
      
      // Solo el propietario puede subir/actualizar/eliminar su avatar
      allow write: if request.auth != null && 
                   request.auth.uid == userId &&
                   isValidImageFile(fileName) &&
                   isValidFileSize(request.resource);
    }
    
    // === REGLAS PARA IMÁGENES DE TARJETAS ===
    match /cards/{cardId}/images/{fileName} {
      // Lectura pública
      allow read: if true;

      // Escritura solo autenticados con límites
      allow create, update: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidFileSize(request.resource);

      allow delete: if request.auth != null;
    }
    
    // === REGLAS PARA LOGOS DE TARJETAS ===
    match /cards/{cardId}/logo/{fileName} {
      // Permitir lectura pública de logos
      allow read: if true;

      // TEMPORAL: Permitir crear/actualizar a usuarios autenticados
      allow create, update: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidFileSize(request.resource);

      // TEMPORAL: Permitir eliminar a usuarios autenticados
      allow delete: if request.auth != null;
    }
    
    // === REGLAS PARA PORTFOLIO DE TARJETAS ===
    match /cards/{cardId}/portfolio/{allPaths=**} {
      // Lectura pública
      allow read: if true;

      // Escritura con límites estrictos
      allow create, update: if request.auth != null &&
                   request.resource.size < 10 * 1024 * 1024;  // Máx 10MB por archivo

      allow delete: if request.auth != null;
    }
    
    // === REGLAS PARA COVER DE TARJETAS ===
    match /cards/{cardId}/cover/{fileName} {
      // Permitir lectura pública de imágenes de cover
      allow read: if true;

      // TEMPORAL: Permitir crear/actualizar a usuarios autenticados
      allow create, update: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidImageSize(request.resource);

      // TEMPORAL: Permitir eliminar a usuarios autenticados
      allow delete: if request.auth != null;
    }
    
    // === REGLAS PARA AVATAR DE TARJETAS ===
    match /cards/{cardId}/avatar/{fileName} {
      // Permitir lectura pública de avatares de tarjetas
      allow read: if true;

      // TEMPORAL: Permitir crear/actualizar a usuarios autenticados
      allow create, update: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidImageSize(request.resource);

      // TEMPORAL: Permitir eliminar a usuarios autenticados
      allow delete: if request.auth != null;
    }
    
    // === REGLAS PARA PRODUCTOS ===
    match /products/{productId}/images/{fileName} {
      // Permitir lectura pública de imágenes de productos
      allow read: if true;

      // REGLA SIMPLIFICADA: Permitir crear/actualizar a usuarios autenticados
      allow create, update: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidFileSize(request.resource);

      // TEMPORAL: Permitir eliminar a usuarios autenticados
      allow delete: if request.auth != null;
    }
    
    // === REGLAS PARA DOCUMENTOS Y ARCHIVOS PRIVADOS ===
    match /users/{userId}/documents/{fileName} {
      // Solo el propietario puede leer sus documentos
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Solo el propietario puede subir/actualizar/eliminar documentos
      allow write: if request.auth != null && 
                   request.auth.uid == userId &&
                   isValidDocumentFile(fileName) &&
                   isValidFileSize(request.resource);
    }
    
    // === REGLAS PARA ARCHIVOS TEMPORALES ===
    match /temp/{userId}/{fileName} {
      // Solo el propietario puede leer archivos temporales
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Solo el propietario puede subir archivos temporales
      allow write: if request.auth != null && 
                   request.auth.uid == userId &&
                   isValidFileSize(request.resource);
    }
    
    // === REGLAS PARA CALENDARIO COLABORATIVO ===
    
    // Fotos de perfil de profesionales del calendario (legacy path)
    // SIMPLIFICADO: Solo requiere autenticación
    match /calendar/professionals/{professionalId}/avatar/{fileName} {
      // Permitir lectura pública de avatares de profesionales
      allow read: if true;
      
      // Solo requiere autenticación - SIMPLIFICADO
      allow write: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidImageSize(request.resource);
    }

    // Fotos de perfil de profesionales del calendario (estructura actual)
    match /calendars/{calendarId}/professionals/{fileName} {
      // Lectura pública
      allow read: if true;

      // Escritura con validación
      allow create, update: if request.auth != null &&
                   isValidImageFile(fileName) &&
                   isValidImageSize(request.resource);

      allow delete: if request.auth != null;
    }
    
    // Adjuntos de eventos del calendario
    match /calendar/events/{eventId}/attachments/{fileName} {
      // TEMPORAL: Solo usuarios autenticados pueden leer
      allow read: if request.auth != null;
      
      // TEMPORAL: Solo usuarios autenticados pueden subir
      allow write: if request.auth != null &&
                  isValidFileSize(request.resource);
    }

    // === FUNCIONES DE VALIDACIÓN ===
    // NOTA: Las funciones que consultan Firestore (isCardOwner, canAccessCalendar, canAccessEvent)
    // no están permitidas en Storage Rules y causan errores 412.
    // Por seguridad, se recomienda implementar validación en Cloud Functions o reglas de Firestore.
    
    // Validar tipos de archivos de imagen
    function isValidImageFile(fileName) {
      return fileName.matches('.*\\.(jpg|jpeg|png|gif|webp|svg)$');
    }
    
    // Validar tipos de archivos de documento
    function isValidDocumentFile(fileName) {
      return fileName.matches('.*\\.(pdf|doc|docx|txt|csv|xls|xlsx)$');
    }
    
    // Validar tamaño de archivo
    function isValidFileSize(resource) {
      return resource.size < 10 * 1024 * 1024; // 10MB límite
    }
    
    // Validar tamaño de archivo para imágenes
    function isValidImageSize(resource) {
      return resource.size < 5 * 1024 * 1024; // 5MB límite para imágenes
    }
  }
}
