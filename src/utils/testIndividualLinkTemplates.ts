import { userTemplatesService } from '@/services/userTemplates';
import { secureLogger } from '@/utils/secureLogger';

// Script para probar que las plantillas individuales de enlaces funcionan correctamente
export async function testIndividualLinkTemplates(cardId: string): Promise<boolean> {
  try {
    secureLogger.devOnly('üß™ Probando sistema de plantillas individuales de enlaces...');
    
    // 1. Verificar estado inicial - no debe haber plantillas
    const initialTemplate = await userTemplatesService.getActiveTemplateForCard(cardId, 'links');
    secureLogger.devOnly(`üìã Estado inicial: ${initialTemplate ? 'Hay plantilla general' : 'Sin plantillas'}`);
    
    // 2. Verificar plantillas para enlaces espec√≠ficos
    const link1Template = await userTemplatesService.getActiveTemplateForCard(cardId, 'links', 'link-1');
    const link2Template = await userTemplatesService.getActiveTemplateForCard(cardId, 'links', 'link-2');
    
    secureLogger.devOnly(`üîó Link 1: ${link1Template ? 'Tiene plantilla' : 'Sin plantilla'}`);
    secureLogger.devOnly(`üîó Link 2: ${link2Template ? 'Tiene plantilla' : 'Sin plantilla'}`);
    
    // 3. Obtener plantillas disponibles
    const availableTemplates = await userTemplatesService.getTemplatesBySection('links');
    if (availableTemplates.length === 0) {
      secureLogger.devOnly('‚ùå No hay plantillas disponibles para probar');
      return false;
    }
    
    secureLogger.devOnly(`üé® Plantillas disponibles: ${availableTemplates.length}`);
    availableTemplates.forEach(t => {
      secureLogger.devOnly(`  - ${t.name} (${t.category})`);
    });
    
    // 4. Simular aplicaci√≥n de plantilla individual
    const testTemplate = availableTemplates[0];
    const testData = { title: 'Enlace de Prueba Individual', backgroundColor: '#ff6b6b' };
    
    secureLogger.devOnly(`üéØ Aplicando plantilla "${testTemplate.name}" al enlace link-1...`);
    
    const instance = await userTemplatesService.applyTemplateToCard(
      testTemplate.id,
      'test-user',
      cardId,
      testData,
      { targetItemId: 'link-1' }
    );
    
    if (!instance) {
      secureLogger.devOnly('‚ùå Error aplicando plantilla');
      return false;
    }
    
    // 5. Verificar que solo el enlace espec√≠fico tiene la plantilla
    const generalTemplateAfter = await userTemplatesService.getActiveTemplateForCard(cardId, 'links');
    const link1TemplateAfter = await userTemplatesService.getActiveTemplateForCard(cardId, 'links', 'link-1');
    const link2TemplateAfter = await userTemplatesService.getActiveTemplateForCard(cardId, 'links', 'link-2');
    
    secureLogger.devOnly('üìä Resultados despu√©s de aplicar plantilla:');
    secureLogger.devOnly(`  - Plantilla general: ${generalTemplateAfter ? '‚ùå PRESENTE (mal)' : '‚úÖ AUSENTE (bien)'}`);
    secureLogger.devOnly(`  - Link 1: ${link1TemplateAfter ? '‚úÖ PRESENTE (bien)' : '‚ùå AUSENTE (mal)'}`);
    secureLogger.devOnly(`  - Link 2: ${link2TemplateAfter ? '‚ùå PRESENTE (mal)' : '‚úÖ AUSENTE (bien)'}`);
    
    // 6. Verificar que los datos de la instancia son correctos
    if (link1TemplateAfter) {
      secureLogger.devOnly(`üîç Datos de la instancia: ${JSON.stringify(link1TemplateAfter.instance.data)}`);
      secureLogger.devOnly(`üéØ Target Item ID: ${link1TemplateAfter.instance.targetItemId}`);
    }
    
    // 7. Limpiar plantilla de prueba
    secureLogger.devOnly('üßπ Limpiando plantilla de prueba...');
    await userTemplatesService.removeTemplateFromCard(cardId, 'links', 'link-1');
    
    const success = !generalTemplateAfter && !!link1TemplateAfter && !link2TemplateAfter;
    
    if (success) {
      secureLogger.devOnly('üéâ ¬°Prueba exitosa! Las plantillas individuales funcionan correctamente');
      secureLogger.devOnly('');
      secureLogger.devOnly('‚ú® Instrucciones para el usuario:');
      secureLogger.devOnly('1. Ve al editor de enlaces');
      secureLogger.devOnly('2. Haz clic en la varita m√°gica (ü™Ñ) de un enlace espec√≠fico');
      secureLogger.devOnly('3. Selecciona una plantilla');
      secureLogger.devOnly('4. La plantilla se aplicar√° SOLO a ese enlace');
      secureLogger.devOnly('5. Otros enlaces mantendr√°n su dise√±o original');
    } else {
      secureLogger.devOnly('‚ùå Prueba fallida. El sistema no est√° funcionando correctamente');
    }
    
    return success;
    
  } catch (error) {
    secureLogger.devOnly('üí• Error en la prueba:', error);
    return false;
  }
}

// Funci√≥n para demostrar el problema anterior (antes de la correcci√≥n)
export function explainTheProblem(): void {
  secureLogger.devOnly('üìö EXPLICACI√ìN DEL PROBLEMA CORREGIDO:');
  secureLogger.devOnly('');
  secureLogger.devOnly('‚ùå ANTES (problema):');
  secureLogger.devOnly('  - Al aplicar plantilla a un enlace espec√≠fico');
  secureLogger.devOnly('  - La plantilla aparec√≠a en TODOS los enlaces');
  secureLogger.devOnly('  - No hab√≠a separaci√≥n entre plantillas individuales y generales');
  secureLogger.devOnly('');
  secureLogger.devOnly('‚úÖ DESPU√âS (solucionado):');
  secureLogger.devOnly('  - Cada enlace puede tener su propia plantilla');
  secureLogger.devOnly('  - Las plantillas se aplican solo al enlace seleccionado');
  secureLogger.devOnly('  - Separaci√≥n clara entre plantillas individuales y generales');
  secureLogger.devOnly('');
  secureLogger.devOnly('üîß CAMBIOS REALIZADOS:');
  secureLogger.devOnly('  - Corregido filtrado en getActiveTemplateForCard()');
  secureLogger.devOnly('  - Corregido filtrado en subscribeActiveTemplateForCard()');
  secureLogger.devOnly('  - Corregido filtrado en deactivateCardTemplates()');
  secureLogger.devOnly('  - L√≥gica: targetItemId espec√≠fico = plantilla espec√≠fica');
  secureLogger.devOnly('  - L√≥gica: sin targetItemId = plantilla general');
}

// A√±adir funciones al objeto global para pruebas en consola
if (typeof window !== 'undefined') {
  // @ts-ignore
  window.testIndividualLinkTemplates = testIndividualLinkTemplates;
  // @ts-ignore
  window.explainLinkTemplatesProblem = explainTheProblem;
  
  secureLogger.devOnly('üõ†Ô∏è Funciones de prueba de plantillas individuales disponibles:');
  secureLogger.devOnly('  - testIndividualLinkTemplates(cardId) - Probar sistema completo');
  secureLogger.devOnly('  - explainLinkTemplatesProblem() - Explicar el problema corregido');
}
